//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/PlayerControls/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""walking"",
            ""id"": ""178bfe5d-704e-4bd6-928b-e04cd9b42666"",
            ""actions"": [
                {
                    ""name"": ""horrizontalMove"",
                    ""type"": ""Value"",
                    ""id"": ""195a59f1-a8ba-42bc-8281-cd9d86baf8f9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""jump"",
                    ""type"": ""Button"",
                    ""id"": ""86448320-7f85-43cd-81a6-8c9326be2fa6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""crouch"",
                    ""type"": ""Button"",
                    ""id"": ""cf6e8b23-305a-430d-8ce6-2bc14cde4b67"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""sprint"",
                    ""type"": ""Button"",
                    ""id"": ""13c3ea50-3e31-4213-9054-516dc7f202f2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""interact"",
                    ""type"": ""Button"",
                    ""id"": ""7c8ae6dd-d84c-4c9b-9875-0f3543d25350"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""camMovement"",
                    ""type"": ""Value"",
                    ""id"": ""8ab55116-636b-4086-a42a-28e203550fa0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""wasd"",
                    ""id"": ""4ec632ce-b7ad-4e2e-874e-ca747236a84c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""horrizontalMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ea3d7cb5-3951-47b5-aa9c-b2b67d47c140"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""horrizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a4f6fc36-3f6f-4033-8754-98ec558e5d58"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""horrizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""530293b9-ba78-4e5f-a185-25007d76a2a4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""horrizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d6455809-ac5f-471e-bc17-de2fa1de61e6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""horrizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""gamepad-leftstick"",
                    ""id"": ""c1bee06c-14da-4895-8672-3009c0eb6da5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""horrizontalMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""104e351d-5198-4fe7-9833-bc1e33084e27"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""horrizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1ee4282e-6b58-4e87-8ff9-1fb7e4f422ca"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""horrizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""bdd9d34c-c89e-40ca-a2a5-7df837581f0a"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""horrizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f6f151d1-dbb8-4fc4-b34a-8729c271cf1f"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""horrizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a6f9348d-f281-452b-b3ce-f82f66843d6f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""019f710a-c6e7-4951-a5d5-f287e515bfb1"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""239e07a8-8346-43a6-9d08-4cf71e8edb7a"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8022ad44-a238-437a-b432-bf8995516391"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ec3e035-a600-4990-8f42-943aefe48a9b"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cae890b6-18e0-4fc6-990e-ecaa968e583f"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a62e90d-4d15-4a09-8b61-660a31724e24"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e49c3bc-d768-4d36-841b-4f34d257bb88"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37e89fe2-d722-4b19-b49a-76ab818fbd3e"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""camMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba32f8af-9287-4308-9256-943051715b99"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""camMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // walking
        m_walking = asset.FindActionMap("walking", throwIfNotFound: true);
        m_walking_horrizontalMove = m_walking.FindAction("horrizontalMove", throwIfNotFound: true);
        m_walking_jump = m_walking.FindAction("jump", throwIfNotFound: true);
        m_walking_crouch = m_walking.FindAction("crouch", throwIfNotFound: true);
        m_walking_sprint = m_walking.FindAction("sprint", throwIfNotFound: true);
        m_walking_interact = m_walking.FindAction("interact", throwIfNotFound: true);
        m_walking_camMovement = m_walking.FindAction("camMovement", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // walking
    private readonly InputActionMap m_walking;
    private IWalkingActions m_WalkingActionsCallbackInterface;
    private readonly InputAction m_walking_horrizontalMove;
    private readonly InputAction m_walking_jump;
    private readonly InputAction m_walking_crouch;
    private readonly InputAction m_walking_sprint;
    private readonly InputAction m_walking_interact;
    private readonly InputAction m_walking_camMovement;
    public struct WalkingActions
    {
        private @PlayerControls m_Wrapper;
        public WalkingActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @horrizontalMove => m_Wrapper.m_walking_horrizontalMove;
        public InputAction @jump => m_Wrapper.m_walking_jump;
        public InputAction @crouch => m_Wrapper.m_walking_crouch;
        public InputAction @sprint => m_Wrapper.m_walking_sprint;
        public InputAction @interact => m_Wrapper.m_walking_interact;
        public InputAction @camMovement => m_Wrapper.m_walking_camMovement;
        public InputActionMap Get() { return m_Wrapper.m_walking; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WalkingActions set) { return set.Get(); }
        public void SetCallbacks(IWalkingActions instance)
        {
            if (m_Wrapper.m_WalkingActionsCallbackInterface != null)
            {
                @horrizontalMove.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnHorrizontalMove;
                @horrizontalMove.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnHorrizontalMove;
                @horrizontalMove.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnHorrizontalMove;
                @jump.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnJump;
                @jump.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnJump;
                @jump.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnJump;
                @crouch.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnCrouch;
                @crouch.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnCrouch;
                @crouch.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnCrouch;
                @sprint.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnSprint;
                @sprint.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnSprint;
                @sprint.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnSprint;
                @interact.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnInteract;
                @interact.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnInteract;
                @interact.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnInteract;
                @camMovement.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnCamMovement;
                @camMovement.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnCamMovement;
                @camMovement.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnCamMovement;
            }
            m_Wrapper.m_WalkingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @horrizontalMove.started += instance.OnHorrizontalMove;
                @horrizontalMove.performed += instance.OnHorrizontalMove;
                @horrizontalMove.canceled += instance.OnHorrizontalMove;
                @jump.started += instance.OnJump;
                @jump.performed += instance.OnJump;
                @jump.canceled += instance.OnJump;
                @crouch.started += instance.OnCrouch;
                @crouch.performed += instance.OnCrouch;
                @crouch.canceled += instance.OnCrouch;
                @sprint.started += instance.OnSprint;
                @sprint.performed += instance.OnSprint;
                @sprint.canceled += instance.OnSprint;
                @interact.started += instance.OnInteract;
                @interact.performed += instance.OnInteract;
                @interact.canceled += instance.OnInteract;
                @camMovement.started += instance.OnCamMovement;
                @camMovement.performed += instance.OnCamMovement;
                @camMovement.canceled += instance.OnCamMovement;
            }
        }
    }
    public WalkingActions @walking => new WalkingActions(this);
    public interface IWalkingActions
    {
        void OnHorrizontalMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnCamMovement(InputAction.CallbackContext context);
    }
}
